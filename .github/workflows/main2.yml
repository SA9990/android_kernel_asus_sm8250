name: Kernel Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allow manual triggers

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      KERNEL_DEFCONFIG: vendor/obiwan_defconfig
      KERNEL_IMAGE: out/arch/arm64/boot/Image
      CLANG_TRIPLE: aarch64-linux-gnu-

    steps:
      # Step 1: Checkout Kernel Source
      - name: Checkout Kernel Source
        uses: actions/checkout@v3

      # Step 2: Install Build Dependencies
      - name: Install Build Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git ccache automake flex lzop bison gperf build-essential \
            zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 \
            libbz2-dev squashfs-tools pngcrush schedtool dpkg-dev \
            liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl \
            policycoreutils minicom libxml-sax-base-perl libxml-simple-perl \
            bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev \
            libgl1-mesa-dev xsltproc unzip device-tree-compiler \
            python2 python3 aria2

      # Step 3: Download GCC Toolchain
      - name: Download GCC Toolchain
        run: |
          mkdir -p $GITHUB_WORKSPACE/toolchains/gcc-64
          aria2c -q -x 16 -s 16 -o gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
          tar -C $GITHUB_WORKSPACE/toolchains/gcc-64/ -zxf gcc-aarch64.tar.gz
          echo "GCC_BIN_PATH=$GITHUB_WORKSPACE/toolchains/gcc-64/bin" >> $GITHUB_ENV

      # Step 4: Download Clang Toolchain
      - name: Download Clang Toolchain
        run: |
          mkdir -p $GITHUB_WORKSPACE/toolchains/clang
          curl -L -o clang.tar.gz https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
          mkdir -p $GITHUB_WORKSPACE/toolchains/clang/clang-r522817
          tar -xzf clang.tar.gz -C $GITHUB_WORKSPACE/toolchains/clang/clang-r522817
          rm clang.tar.gz

      # Step 5: Configure and Build Kernel
      - name: Configure and Build Kernel
        run: |
          export PATH=$GITHUB_WORKSPACE/toolchains/clang/clang-r522817/bin:$PATH
          export CROSS_COMPILE=$GITHUB_WORKSPACE/toolchains/gcc-64/bin/aarch64-linux-android-

          # Load default kernel configuration
          make -j$(nproc --all) \
              CC=clang \
              O=out \
              ARCH=$ARCH \
              CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
              AR=llvm-ar \
              NM=llvm-nm \
              LLVM_DIS=llvm-dis \
              OBJCOPY=llvm-objcopy \
              READELF=llvm-readelf \
              OBJDUMP=llvm-objdump \
              OBJSIZE=llvm-size \
              STRIP=llvm-strip \
              LLVM=1 \
              LD=ld.lld \
              LLVM_IAS=1 \
              CROSS_COMPILE=$CROSS_COMPILE \
              $KERNEL_DEFCONFIG

          # Build the kernel
          make -j$(nproc --all) \
              CC=clang \
              O=out \
              ARCH=$ARCH \
              CLANG_TRIPLE=${{ env.CLANG_TRIPLE }} \
              AR=llvm-ar \
              NM=llvm-nm \
              LLVM_DIS=llvm-dis \
              OBJCOPY=llvm-objcopy \
              READELF=llvm-readelf \
              OBJDUMP=llvm-objdump \
              OBJSIZE=llvm-size \
              STRIP=llvm-strip \
              LLVM=1 \
              LD=ld.lld \
              LLVM_IAS=1 \
              CROSS_COMPILE=$CROSS_COMPILE
              dtbs
      # Step 6: Upload Kernel dtbs
      - name: Upload Kernel dtbs
        uses: actions/upload-artifact@v3
        with:
          name: Kernel-dtbs
          path: out/arch/arm64/
